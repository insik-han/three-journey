---
import Layout from "../layouts/Layout.astro";
---

<Layout title="05 - Transform Objects">
  <canvas></canvas>
  <script>
    import * as THREE from "three";

    const SIZES = {
      width: 800,
      height: 600,
    };

    const canvas = document.querySelector("canvas");

    if (canvas !== null) {
      // Scene
      const scene = new THREE.Scene();

      // Objects
      const group = new THREE.Group();
      group.position.y = 1;
      group.scale.y = 2;
      group.rotation.y = 1;
      scene.add(group);

      const cube1 = new THREE.Mesh(
        new THREE.BoxGeometry(1, 1, 1),
        new THREE.MeshBasicMaterial({ color: 0xff0000 })
      );

      const cube2 = new THREE.Mesh(
        new THREE.BoxGeometry(1, 1, 1),
        new THREE.MeshBasicMaterial({ color: 0x00ff00 })
      );
      cube2.position.x = -2;

      const cube3 = new THREE.Mesh(
        new THREE.BoxGeometry(1, 1, 1),
        new THREE.MeshBasicMaterial({ color: 0x0000ff })
      );
      cube3.position.x = 2;

      group.add(cube1, cube2, cube3);

      // const geometry = new THREE.BoxGeometry(1, 1, 1);
      // const material = new THREE.MeshBasicMaterial({ color: 0xff0000 });
      // const mesh = new THREE.Mesh(geometry, material);
      // scene.add(mesh);

      // mesh.position.set(0.7, -0.6, 1);

      // // Scale
      // mesh.scale.set(2, 0.5, 0.5);

      // // Rotation
      // mesh.rotation.reorder("YXZ"); // 어느 축 먼저 회전할지 정함
      // mesh.rotation.set(Math.PI * 0.25, Math.PI * 0.25, 0);

      // Axes helper
      const axesHelper = new THREE.AxesHelper(1);

      // Camera
      const camera = new THREE.PerspectiveCamera(
        75,
        SIZES.width / SIZES.height
      );
      camera.position.set(0, 0, 3);

      scene.add(axesHelper, camera);

      // Renderer
      const renderer = new THREE.WebGLRenderer({ canvas });
      renderer.setSize(SIZES.width, SIZES.height);
      renderer.render(scene, camera);
    }
  </script>
</Layout>
